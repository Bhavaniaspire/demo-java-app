trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  ACR: 'xxxxxx.azurecr.io'
 
stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName:  Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'install'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: |
          **/mhc-aks.yaml
          **/*.dacpac
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: Deploy
  displayName: AKS Stage
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
    - deployment: AKS
      displayName: 'AKS Deployment'
      environment: 'dev'
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
       runOnce:
         deploy:
          steps:
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'Pay-As-You-Go(xxxxxxxxxxxxxxxxxxxxxxxxxxx)'
              azureResourceGroup: 'xxxxxxxxxxxx'
              kubernetesCluster: 'xxxxxxxxx'
              command: 'apply'
              useConfigurationFile: true
              configuration: '$(pipeline.workspace)/drop/aks-deploy-from-acr.yaml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: 'Pay-As-You-Go(xxxxxxxxxxxxxxxxxxxxxxxxxxx)'
              azureContainerRegistry: 'xxxxxxxxx.azurecr.io'
              secretName: 'acrsecret'
